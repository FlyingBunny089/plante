// Mocks generated by Mockito 5.0.3 from annotations
// in plante/test/ui/map/map_page_model_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:math' as _i9;

import 'package:geolocator_platform_interface/src/models/position.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:permission_handler_platform_interface/permission_handler_platform_interface.dart'
    as _i6;
import 'package:plante/base/result.dart' as _i3;
import 'package:plante/model/location_controller.dart' as _i4;
import 'package:plante/model/shop.dart' as _i8;
import 'package:plante/outside/map/shops_manager.dart' as _i7;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakePosition extends _i1.Fake implements _i2.Position {}

class _FakeResult<OK, ERR> extends _i1.Fake implements _i3.Result<OK, ERR> {}

/// A class which mocks [LocationController].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationController extends _i1.Mock
    implements _i4.LocationController {
  MockLocationController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i6.PermissionStatus> permissionStatus() =>
      (super.noSuchMethod(Invocation.method(#permissionStatus, []),
              returnValue: Future.value(_i6.PermissionStatus.granted))
          as _i5.Future<_i6.PermissionStatus>);
  @override
  _i5.Future<_i6.PermissionStatus> requestPermission() =>
      (super.noSuchMethod(Invocation.method(#requestPermission, []),
              returnValue: Future.value(_i6.PermissionStatus.granted))
          as _i5.Future<_i6.PermissionStatus>);
  @override
  _i5.Future<_i2.Position?> lastKnownPosition() => (super.noSuchMethod(
      Invocation.method(#lastKnownPosition, []),
      returnValue: Future.value(_FakePosition())) as _i5.Future<_i2.Position?>);
  @override
  _i5.Future<_i2.Position?> currentPosition() => (super.noSuchMethod(
      Invocation.method(#currentPosition, []),
      returnValue: Future.value(_FakePosition())) as _i5.Future<_i2.Position?>);
}

/// A class which mocks [ShopsManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockShopsManager extends _i1.Mock implements _i7.ShopsManager {
  MockShopsManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<
      _i3.Result<Map<String, _i8.Shop>, _i7.ShopsManagerError>> fetchShops(
          _i9.Point<double>? northeast, _i9.Point<double>? southwest) =>
      (super.noSuchMethod(
              Invocation.method(#fetchShops, [northeast, southwest]),
              returnValue: Future.value(
                  _FakeResult<Map<String, _i8.Shop>, _i7.ShopsManagerError>()))
          as _i5
              .Future<_i3.Result<Map<String, _i8.Shop>, _i7.ShopsManagerError>>);
}
