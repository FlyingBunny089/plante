// Mocks generated by Mockito 5.0.10 from annotations
// in plante/test/lang/user_langs_manager_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:plante/lang/_user_langs_storage.dart' as _i2;
import 'package:plante/model/user_langs.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [UserLangsStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLangsStorage extends _i1.Mock implements _i2.UserLangsStorage {
  MockUserLangsStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.UserLangs?> userLangs() =>
      (super.noSuchMethod(Invocation.method(#userLangs, []),
              returnValue: Future<_i4.UserLangs?>.value())
          as _i3.Future<_i4.UserLangs?>);
  @override
  _i3.Future<void> setUserLangs(_i4.UserLangs? value) =>
      (super.noSuchMethod(Invocation.method(#setUserLangs, [value]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
}
